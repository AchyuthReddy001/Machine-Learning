q()
setwd("E:/MY_GOAL/Udmey_Machine Learning/Part 1 - Data Preprocessing")
data=read.csv("Data.csv")
View(data)
View(data)
View(data)
View(data)
#Missing values
data$Age=ifelse(is.na(data$Age),
ave(data$Age,FUN = function(x),mean(x,na.rm = TRUE)),
data$Age)
#Missing values
data$Age=ifelse(is.na(data$Age),
ave(data$Age,FUN = function(x) mean(x,na.rm = TRUE)),
data$Age)
data$Salary=ifelse(is.na(data$Salary),
ave(data$Salary,FUN = function(x) mean(x,na.rm = TRUE)),
data$Salary)
#Categorical Data
data$Country=factor(data$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
install.packages("caTools")
library(caTools)
data$Purchased=factor(data$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
#splitting data in to train and test sets
set.seed(123)
Split=sample.split(data$Purchased,SplitRatio = 0.8)
Split
train_set=subset(data,Split==TRUE)
View(train_set)
View(train_set)
test_set=subset(data,Split==FALSE)
#feature Scaling
train_set=scale(train_set)
#feature Scaling
train_set[2:3]=scale(train_set[2:3])
View(train_set)
View(train_set)
#feature Scaling
train_set[2:3]=scale(train_set[2:3])
test_set[2:3]=scale(test_set[2:3])
View(test_set)
View(test_set)
#importing data
data=read.csv("Salary_Data.csv")
setwd("E:/MY_GOAL/Udmey_Machine Learning/Part 2 - Regression/Section 4 - Simple Linear Regression")
#importing data
data=read.csv("Salary_Data.csv")
#importing data
data=read.csv("Salary_Data.csv")
#splitting train and test set
library(caTools)
#splitting train and test set
library(caTools)
Split=sample.split(data$Salary,SplitRatio = 0.75)
train_set=subset(data,Split==TRUE)
View(train_set)
View(train_set)
#splitting train and test set
library(caTools)
Split=sample.split(data$Salary,SplitRatio = 0.75)
train_set=subset(data,Split==TRUE)
test_set=subset(data,Split==FALSE)
#model building
reg=lm(formula =Salary ~ YearsExperience,data = train_set)
summary(reg)
#prediction
y_pred=predict(reg,newdata = test_set)
#visualising data
install.packages("ggplot2")
library(ggplot2)
ggplot()+
geom_point(aes(train_set$YearsExperience,train_set$Salary),colour="red")+
geom_line(aes(train_set$YearsExperience,predict(reg,newdata=train_set)),
colour="blue")+
ggtitle("Sal vs Exp(traingSet")+
xlab("Years of Expr")+
ylab("Salary")
#on test set
ggplot()+
geom_point(aes(test_set$YearsExperience,test_set$Salary),colour="blue")+
geom_line(aes(train_set$YearsExperience,predict(reg,newdata=train_set)),
colour="red")+
ggtitle("Sal vs Exp(testSet")+
xlab("Years of Expr")+
ylab("Salary")
setwd("E:/MY_GOAL/Udmey_Machine Learning/Part 2 - Regression/Section 5 - Multiple Linear Regression")
#importing packages
install.packages("caTools")
library(caTools)
install.packages("caTools")
#importing Dataset
data=read.csv("50_Startups.csv")
View(data)
View(data)
View(data)
View(data)
#categorical data
data=factor(data,levels  = c("New York","California","Florida"),
labels = c(1,2,3))
#importing packages
install.packages("caTools")
library(caTools)
#importing Dataset
data=read.csv("50_Startups.csv")
#categorical data
data$State
=factor(data$State,levels  = c("New York","California","Florida"),
labels = c(1,2,3))
#categorical data
data$State
=factor(data$State,levels  = c("New York","California","Florida"),
labels = c(1,2,3))
#categorical data
data$State=factor(data$State,levels  = c("New York","California","Florida"),
labels = c(1,2,3))
View(data)
View(data)
values=sample.split(data$Profit,SplitRatio = 0.8)
values
train_set=subset(data,values==TRUE)
View(train_set)
View(train_set)
set.seed(123)
values=sample.split(data$Profit,SplitRatio = 0.8)
train_set=subset(data,values==TRUE)
test_set=subset(data,values==FALSE)
#featute scaling
data=scale(data)
#build the model
reg=lm(formula = Profit ~ .,data = train_set)
summary(reg)
#build the model
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend + State,data = train_set)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend,data = train_set)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend  +
Marketing.Spend,data = train_set)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend  ,data = train_set)
summary(reg)
#testing on test data set
y_pred=predict(reg,newdata = test_set)
y_pred
View(test_set)
View(test_set)
#build the model
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend + State,data = train_set)
summary(reg)
#testing on test data set
y_pred=predict(reg,newdata = test_set)
y_pred
#build the model
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend + State,data = data)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend,data = data)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend  +
Marketing.Spend,data = data)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend  ,data = data)
summary(reg)
#testing on test data set
y_pred=predict(reg,newdata = test_set)
y_pred
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend + State,data = data)
summary(reg)
#testing on test data set
y_pred=predict(reg,newdata = test_set)
y_t
y_pred
#build the model back propagation
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend + State,data = data)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend + Administration +
Marketing.Spend,data = data)
summary(reg)
reg=lm(formula = Profit ~ R.D.Spend  +
Marketing.Spend,data = data)
summary(reg)
#testing on test data set
y_pred=predict(reg,newdata = test_set)
y_pred
View(test_set)
View(test_set)
