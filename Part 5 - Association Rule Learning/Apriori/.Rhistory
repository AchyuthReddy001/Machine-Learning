q()
#importing dataset
data=read.csv("Position_Salaries.csv")
data=data[2:3]
#installing lib
install.packages("e1071")
library("e1071")
#building the model
reg=svm(formula=Salary ~ .,data = data,
type="eps-regression")
#predicting
y_pred=predict(reg,newdata = data.frame(Level=6.5))
#visualising the data
library(ggplot2)
ggplot()+
geom_point(aes(x=data$Level,y=data$Salary),color="blue")+
geom_line(aes(x=data$Level,y=predict(reg,newdata = data)),color="black")+
ggtitle("Sal vs Exp using SVR")+
xlab("Exp")+
ylab("Salary")
#importing dataset
data=read.csv("Position_Salaries.csv")
data=data[2:3]
#installing lib
install.packages("e1071")
library("e1071")
#building the model
reg=svm(formula=Salary ~ .,data = data,
type="eps-regression")
install.packages("e1071")
#building the model
reg=svm(formula=Salary ~ .,data = data,
type="eps-regression")
#importing dataset
data=read.csv("Position_Salaries.csv")
data=data[2:3]
#importing dataset
data=read.csv("Position_Salaries.csv")
data=data[2:3]
data=read.csv("Position_Salaries.csv")
#importing dataset
data=read.csv("Position_Salaries.csv")
data=data[2:3]
data=data[2:3]
#importing dataset
data=read.csv("Position_Salaries.csv")
#importing dataset
data=read.csv("E:\\MY_GOAL\\Machine Learning\\Part 2 - Regression\\Section 7 - Support Vector Regression (SVR)\\Position_Salaries.csv")
data=data[2:3]
data
View(data)
View(data)
#installing lib
install.packages("e1071")
library("e1071")
#building the model
reg=svm(formula=Salary ~ .,data = data,
type="eps-regression")
predicting
y_pred=predict(reg,newdata = data.frame(Level=6.5))
#visualising the data
library(ggplot2)
ggplot()+
geom_point(aes(x=data$Level,y=data$Salary),color="blue")+
geom_line(aes(x=data$Level,y=predict(reg,newdata = data)),color="black")+
ggtitle("Sal vs Exp using SVR")+
xlab("Exp")+
ylab("Salary")
setwd("E:/MY_GOAL/Machine Learning/Part 5 - Association Rule Learning/Section 28 - Apriori")
#Data Preprocessing
dataset=read.csv("Market_Basket_Optimisation.csv",header = TRUE)
#Data Preprocessing
dataset=read.csv("Market_Basket_Optimisation.csv",header = TRUE)
View(dataset)
#Data Preprocessing
dataset=read.csv("Market_Basket_Optimisation.csv",header = FALSE)
View(dataset)
install.packages('arules')
install.packages('arules')
library(arules)
dataset=read.transactions("Market_Basket_Optimisation.csv",sep = ",",
rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
#train the model
rules=apriori(data = dataset,parameter = list(support=0.003, confidence=0.4))
#train the model
rules=apriori(data = dataset,parameter = list(support=0.003, confidence=0.2))
#train the model
rules=apriori(data = dataset,parameter = list(support=0.003, confidence=0.4))
#visualize
inspect(sort(rules,by='lift')[0:10])
#visualize
inspect(sort(rules,by='lift')[0:10])
#train the model
rules=apriori(data = dataset,parameter = list(support=0.005, confidence=0.2))
#visualize
inspect(sort(rules,by='lift')[0:10])
#Data Preprocessing
dataset=read.csv("Market_Basket_Optimisation.csv",header = FALSE)
#install.packages('arules')
library(arules)
dataset=read.transactions("Market_Basket_Optimisation.csv",sep = ",",
rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
#train the model
rules=eclat(data = dataset,parameter = list(support=0.005, minlen=2))
#visualize
inspect(sort(rules,by='support')[0:10])
#train the model
rules=eclat(data = dataset,parameter = list(support=0.05, minlen=2))
#visualize
inspect(sort(rules,by='support')[0:10])
#train the model
rules=eclat(data = dataset,parameter = list(support=0.005, minlen=2))
#visualize
inspect(sort(rules,by='support')[0:10])
